/*DROP TABLE POSITION CASCADE CONSTRAINTS;
DROP TABLE CHURCH_MEMBER CASCADE  CONSTRAINTS;
DROP TABLE DEPARTMENT CASCADE CONSTRAINTS;
DROP TABLE ELDER CASCADE CONSTRAINTS;
DROP TABLE PASTOR CASCADE CONSTRAINTS;
DROP TABLE CONFERENCE_LEADER CASCADE CONSTRAINTS;
DROP SEQUENCE seq_position_id;
DROP SEQUENCE seq_church_member_id;
DROP SEQUENCE seq_department_id;
DROP SEQUENCE seq_elder_id;
DROP SEQUENCE seq_pastor_id;
DROP SEQUENCE seq_conference_leader_id;
*/
--THE TYPE OF POSITIONS IN THE CHURCH THAT CHURCH MEMBERS HOLD--
CREATE TABLE POSITION(POSITION_ID VARCHAR(10) PRIMARY KEY,
DIRECTOR VARCHAR(20) NOT NULL, 
ASSISTANT_DIRECTOR VARCHAR(20) NOT NULL,
SECRETARY VARCHAR(20) NOT NULL,
TREASURER VARCHAR(20)
);

--THESE ARE THE BAPTIZED MEMBERS OF THE CHURCH AND SOME HOLD POSITIONS IN DIFFERENT DEPARTMENTS--
CREATE TABLE CHURCH_MEMBER(MEMBER_ID INT PRIMARY KEY,
FIRST_NAME CHAR(20) NOT NULL,
LAST_NAME CHAR(20) NOT NULL,
EMAIL_ADDRESS VARCHAR(20) NOT NULL,
SEX CHAR(1) NOT NULL, -- M or F for census purposes
TERM DATE, --The length of service before the next election cycle
PHONE_NUMBER INT,
POSITION_ID VARCHAR(10), --The position held by the church member
CONSTRAINT FK_MEMBER_POSITION_ID FOREIGN KEY (POSITION_ID) REFERENCES POSITION(POSITION_ID)
);
CREATE INDEX IX_MEMBER_POSITION ON CHURCH_MEMBER(POSITION_ID);

--THE DEPARTMENTS THAT OPERATE IN THE CHURCH--
CREATE TABLE DEPARTMENT(DEPARTMENT_ID INT PRIMARY KEY,
DEPARTMENT_NAME CHAR(20) NOT NULL,
DEPARTMENT_FUNCTION VARCHAR(100) NOT NULL, --The function of the department
OFFICE VARCHAR(5) NOT NULL, --The department's office room number in the church
DEPT_EMAIL_ADDRESS VARCHAR(20) NOT NULL,
DEPT_PHONE_NUMBER INT NOT NULL, --The phone number specifically for the department
ELDER_ID INT, --The elder in charge of the department
CONSTRAINT FK_DEPT_ELDER_ID FOREIGN KEY (ELDER_ID) REFERENCES ELDER(ELDER_ID),
CONFERENCE_LEADER_ID VARCHAR(20),
CONSTRAINT FK_DEPT_CONFERENCE_LEADER_ID FOREIGN KEY (CONFERENCE_LEADER_ID) REFERENCES CONFERENCE_LEADER(CONFERENCE_LEADER_ID),
MEMBER_ID INT, --The members of the department
CONSTRAINT FK_DEPT_MEMBER_ID FOREIGN KEY (MEMBER_ID) REFERENCES CHURCH_MEMBER(MEMBER_ID)
);
CREATE INDEX IX_DEPT_ELDER ON DEPARTMENT(ELDER_ID);
CREATE INDEX IX_DEPT_CONFERENCE_LEADER ON DEPARTMENT(CONFERENCE_LEADER_ID);
CREATE INDEX IX_DEPT_MEMBERS ON DEPARTMENT(MEMBER_ID);

--THE ELECTED ELDERS OF THE CHURCH OVERSEEING DIFFERENT DEPARTMENTS--
CREATE TABLE ELDER(ELDER_ID INT PRIMARY KEY,
FIRST_NAME CHAR(20) NOT NULL,
LAST_NAME CHAR(20) NOT NULL,
OFFICE_PHONE_NUMBER NUMERIC(10) NOT NULL, --the elder's office phone number
OFFICE_EMAIL_ADDRESS VARCHAR(20) NOT NULL, --email address for the office of the elder
OFFICE VARCHAR(5) NOT NULL, --the elders office room number in the church
DEPARTMENT_ID INT); --the department the elder oversees
CREATE INDEX IX_ELDER_DEPT ON ELDER(DEPARTMENT_ID);

--ADDING FOREIGN KEY CONSTRAINT ON AN EXISTING TABLE--
ALTER TABLE ELDER
ADD CONSTRAINT FK_ELDER_DEPARTMENT_ID FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID)
;
--THE CHURCH PASTOR WHO RECEIVES REPORTS FROM THE ELDERS AND UPDATE THE CONFERENCE LEADERS--
CREATE TABLE PASTOR(PASTOR_ID VARCHAR(20) PRIMARY KEY,
FIRST_NAME VARCHAR(20) NOT NULL,
LAST_NAME VARCHAR(20) NOT NULL,
OFFICE_PHONE_NUMBER NUMERIC(10) NOT NULL,
OFFICE_EMAIL_ADDRESS VARCHAR(20) NOT NULL,
OFFICE VARCHAR(5) NOT NULL --the pastor's office room number
);
--THE CONFERENCE LEADERS OF THE DIFFERENT DEPARTMENTS UPDATES THE LOCAL CHURCH PASTORS OF UPCOMING EVENTS--
CREATE TABLE CONFERENCE_LEADER(CONFERENCE_LEADER_ID VARCHAR(20) PRIMARY KEY,
FIRST_NAME VARCHAR(20) NOT NULL,
LAST_NAME VARCHAR(20) NOT NULL,
OFFICE_PHONE_NUMBER NUMERIC(10) NOT NULL,
OFFICE_EMAIL_ADDRESS VARCHAR(20) NOT NULL,
PASTOR_ID VARCHAR(20), --the pastor the conference leader reports to
CONSTRAINT FK_CONFERENCE_LEADER_PASTOR_ID FOREIGN KEY (PASTOR_ID) REFERENCES PASTOR(PASTOR_ID),
OFFICE VARCHAR(6) NOT NULL, --their office in the conference building
DEPARTMENT_ID INT, --the department they are in charge of
TERM DATE --how long they serving for
);
--ADDING FOREIGN KEY CONSTRAINT TO AN EXISTING TABLE--
ALTER TABLE CONFERENCE_LEADER
ADD CONSTRAINT FK_CONFERENCE_LEADER_DEPARTMENT_ID FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID);
CREATE INDEX IX_CONFERENCE_LEADER_PASTOR ON CONFERENCE_LEADER(PASTOR_ID);
CREATE INDEX IX_CONFERENCE_LEADER_DEPT ON CONFERENCE_LEADER(DEPARTMENT_ID);

--THIS WILL SERVE AS A SNAPSHOT OF THE DEPT WITH THE DEPTS BASIC INFORMATION INCLUDING THE ELDER OVERSEEING THAT DEPT--
CREATE VIEW DEPARTMENT_INFO AS
SELECT DEPARTMENT_NAME, OFFICE, DEPT_PHONE_NUMBER, ELDER_ID FROM DEPARTMENT;

--THIS VIEW GIVES THE CHURCH MEMBERS THE OPPORTUNITY TO STAY IN CONTACT WITH ONE ANOTHER--
CREATE VIEW MEMBERS_OF_THE_CHURCH AS
SELECT FIRST_NAME, LAST_NAME, PHONE_NUMBER FROM CHURCH_MEMBER;

--IN CASE A MEMBER NEEDS TO REACH OUT TO CONFERENCE LEADERSHIP, THIS VIEW WILL PROVIDE THAT THEIR INFO--
CREATE VIEW CONFERENCE_INFO AS
SELECT DEPARTMENT_ID, FIRST_NAME, LAST_NAME, OFFICE_EMAIL_ADDRESS FROM CONFERENCE_LEADER;

CREATE SEQUENCE SEQ_POSITION_ID;
CREATE SEQUENCE SEQ_MEMBER_ID;
CREATE SEQUENCE SEQ_DEPARTMENT_ID;
CREATE SEQUENCE SEQ_ELDER_ID;
CREATE SEQUENCE SEQ_PASTOR_ID;
CREATE SEQUENCE SEQ_CONFERENCE_LEADER_ID;

--THE PURPOSE OF THIS TRIGGER IS TO MAKE SURE WHEN A NEW MEMBER IS ADDED TO THE CHURCH, THEY RECEIVE A MEMBER ID--
CREATE OR REPLACE TRIGGER MEMBERID
BEFORE INSERT ON CHURCH_MEMBER
FOR EACH ROW 
BEGIN
    IF :NEW.MEMBER_ID IS NULL THEN
    :NEW.MEMBER_ID := SEQ_MEMBER_ID.NEXTVAL;
END IF;
END;
/
/*ONCE A CHURCH MEMBER IS NO LONGER SERVING IN A POSITION THIS TRIGGER WILL INFORM THE INQUIRER THE MEMBER IS 
NO LONGER SERVING IN AN OFFICIAL CAPACITY*/
CREATE OR REPLACE TRIGGER POSITIONID
BEFORE UPDATE ON CHURCH_MEMBER
FOR EACH ROW 
BEGIN
    IF :NEW.POSITION_ID IS NULL THEN
    :NEW.POSITION_ID := 'NO OFFICIAL POSITION';
END IF;
END;
/
/*CHURCH ELDERS ARE ROTATED AFTER A FEW YEARS OF SERVING AND THIS TRIGGER WILL INFORM THE INQUIRER IF 
THE ELDER IN QUESTION IS CURRENTLY SERVING*/
CREATE OR REPLACE TRIGGER CHURCH_ELDERS
BEFORE UPDATE ON ELDER
FOR EACH ROW 
BEGIN
    IF :NEW.ELDER_ID IS NULL THEN
    :NEW.ELDER_ID := 'NOT CURRENTLY A SERVIING ELDER';
END IF;
END;
/
SELECT * FROM POSITION;
SELECT * FROM CHURCH_MEMBER;
SELECT * FROM DEPARTMENT;
SELECT * FROM ELDER;
SELECT * FROM PASTOR;
SELECT * FROM CONFERENCE_LEADER;





DML and Query Source Code

--Inserting church members information into the database--

INSERT INTO CHURCH_MEMBER(MEMBER_ID, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS, SEX, TERM, PHONE_NUMBER)
VALUES(0001, 'WILL', 'SMITH', 'WILLSMITH@GMAIL.COM', 'M', TO_DATE('01-JAN-21', 'DD-MON-YY'), '5715721111');

INSERT INTO CHURCH_MEMBER(MEMBER_ID, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS, SEX, TERM, PHONE_NUMBER)
VALUES(0002, 'PHILIP', 'BANKS', 'PBANKS@GMAIL.COM', 'M', TO_DATE('01-JAN-21', 'DD-MON-YY'), '5715721122');
INSERT INTO CHURCH_MEMBER(MEMBER_ID, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS, SEX, TERM, PHONE_NUMBER)
VALUES(0003, 'CARLTON', 'BANKS', 'CBANKS@GMAIL.COM', 'M', TO_DATE('01-JAN-21', 'DD-MON-YY'), '5715721123');

INSERT INTO CHURCH_MEMBER(MEMBER_ID, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS, SEX, TERM, PHONE_NUMBER)
VALUES(0004, 'VIVIAN', 'BANKS', 'VBANKS@GMAIL.COM', 'F', TO_DATE('01-JAN-21', 'DD-MON-YY'), '5715721124');

INSERT INTO CHURCH_MEMBER(MEMBER_ID, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS, SEX, TERM, PHONE_NUMBER)
VALUES(0005, 'HILLARY', 'BANKS', 'HBANKS@GMAIL.COM', 'F', TO_DATE('01-JAN-21', 'DD-MON-YY'), '5715721125');

INSERT INTO CHURCH_MEMBER(MEMBER_ID, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS, SEX, TERM, PHONE_NUMBER)
VALUES(0006, 'ASHLEY', 'BANKS', 'ABANKS@GMAIL.COM', 'F', TO_DATE('01-JAN-21', 'DD-MON-YY'), '5715721126');

INSERT INTO CHURCH_MEMBER(MEMBER_ID, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS, SEX, TERM, PHONE_NUMBER)
VALUES(0007, 'NICHOLAS', 'BANKS', 'NBANKS@GMAIL.COM', 'M', TO_DATE('01-JAN-21', 'DD-MON-YY'), '5715721127');

INSERT INTO CHURCH_MEMBER(MEMBER_ID, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS, SEX, TERM, PHONE_NUMBER)
VALUES(0008, 'JEFFREY', 'BUTLER', 'JBUTLER@GMAIL.COM', 'M', TO_DATE('01-JAN-21', 'DD-MON-YY'), '5715721128');

INSERT INTO CHURCH_MEMBER(MEMBER_ID, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS, SEX, TERM, PHONE_NUMBER)
VALUES(0009, 'VY', 'SMITH', 'VYSMITH@GMAIL.COM', 'F', TO_DATE('01-JAN-21', 'DD-MON-YY'), '5715721112');

INSERT INTO CHURCH_MEMBER(MEMBER_ID, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS, SEX, TERM, PHONE_NUMBER)
VALUES(0010, 'HELEN', 'SMITH', 'HSMITH@GMAIL.COM', 'F', TO_DATE('01-JAN-21', 'DD-MON-YY'), '5715721113');

COMMIT;

ALTER TABLE CHURCH_MEMBER ADD POSITION CHAR(30);
DELETE FROM CHURCH_MEMBER WHERE POSITION='DIRECTOR';
UPDATE CHURCH_MEMBER SET POSITION_ID = 'M01' WHERE CHURCH_MEMBER.FIRST_NAME='WILL';

UPDATE CHURCH_MEMBER SET POSITION_ID='T01' WHERE CHURCH_MEMBER.FIRST_NAME='CARLTON';

UPDATE CHURCH_MEMBER SET POSITION_ID='S01' WHERE CHURCH_MEMBER.FIRST_NAME='ASHLEY';

UPDATE CHURCH_MEMBER SET POSITION_ID='Y01' WHERE CHURCH_MEMBER.FIRST_NAME='JEFFREY';

UPDATE CHURCH_MEMBER SET POSITION_ID='CPMO1' WHERE CHURCH_MEMBER.FIRST_NAME='PHILIP';

UPDATE CHURCH_MEMBER SET POSITION_ID='Y01' WHERE CHURCH_MEMBER.FIRST_NAME='NICHOLAS';

UPDATE CHURCH_MEMBER SET POSITION_ID='CPMO1' WHERE CHURCH_MEMBER.FIRST_NAME='VY';

UPDATE CHURCH_MEMBER SET POSITION_ID='CPMO1' WHERE CHURCH_MEMBER.FIRST_NAME='HELEN';

UPDATE CHURCH_MEMBER SET POSITION_ID='T01' WHERE CHURCH_MEMBER.FIRST_NAME='HILLARY';

UPDATE CHURCH_MEMBER SET POSITION_ID='T01' WHERE CHURCH_MEMBER.FIRST_NAME='VIVIAN';

--Inserting conference leaders information into the database--

INSERT INTO CONFERENCE_LEADER(CONFERENCE_LEADER_ID, FIRST_NAME, LAST_NAME, OFFICE_PHONE_NUMBER, OFFICE_EMAIL_ADDRESS, OFFICE, TERM)
VALUES('CT01', 'JAZZY', 'JEFF', '7037301111', 'JJEFF@GMAIL.COM', 'C200', TO_DATE('01-JAN-21', 'DD-MON-YY'));

INSERT INTO CONFERENCE_LEADER(CONFERENCE_LEADER_ID, FIRST_NAME, LAST_NAME, OFFICE_PHONE_NUMBER, OFFICE_EMAIL_ADDRESS, OFFICE, TERM)
VALUES('CS01', 'JACKIE', 'AMES', '7037301112', 'JAMES@GMAIL.COM', 'C201', TO_DATE('01-JAN-21', 'DD-MON-YY'));
INSERT INTO CONFERENCE_LEADER(CONFERENCE_LEADER_ID, FIRST_NAME, LAST_NAME, OFFICE_PHONE_NUMBER, OFFICE_EMAIL_ADDRESS, OFFICE, TERM)
VALUES('CPM01', 'TREVOR', 'COLLINS', '7037301113', 'TCOLLINS@GMAIL.COM', 'C202', TO_DATE('01-JAN-21', 'DD-MON-YY'));

INSERT INTO CONFERENCE_LEADER(CONFERENCE_LEADER_ID, FIRST_NAME, LAST_NAME, OFFICE_PHONE_NUMBER, OFFICE_EMAIL_ADDRESS, OFFICE, TERM)
VALUES('CM01', 'LISA', 'WILKES', '7037301114', 'LWILKES@GMAIL.COM', 'C203', TO_DATE('01-JAN-21', 'DD-MON-YY'));

INSERT INTO CONFERENCE_LEADER(CONFERENCE_LEADER_ID, FIRST_NAME, LAST_NAME, OFFICE_PHONE_NUMBER, OFFICE_EMAIL_ADDRESS, OFFICE, TERM)
VALUES('CY01', 'JANICE', 'SMITH', '7037301115', 'JSMITH@GMAIL.COM', 'C204', TO_DATE('01-JAN-21', 'DD-MON-YY'));

COMMIT;

UPDATE CONFERENCE_LEADER SET DEPARTMENT_ID='100', PASTOR_ID='P100' WHERE CONFERENCE_LEADER.FIRST_NAME='JAZZY';
UPDATE CONFERENCE_LEADER SET DEPARTMENT_ID='200', PASTOR_ID='P100' WHERE CONFERENCE_LEADER.FIRST_NAME='JACKIE';
UPDATE CONFERENCE_LEADER SET DEPARTMENT_ID='300', PASTOR_ID='P100' WHERE CONFERENCE_LEADER.FIRST_NAME='TREVOR';
UPDATE CONFERENCE_LEADER SET DEPARTMENT_ID='400', PASTOR_ID='P100' WHERE CONFERENCE_LEADER.FIRST_NAME='LISA';
UPDATE CONFERENCE_LEADER SET DEPARTMENT_ID='500', PASTOR_ID='P100' WHERE CONFERENCE_LEADER.FIRST_NAME='JANICE';


--Inserting the different departments information into the database--

INSERT INTO DEPARTMENT(DEPARTMENT_ID, DEPARTMENT_NAME, DEPARTMENT_FUNCTION, OFFICE, DEPT_EMAIL_ADDRESS, DEPT_PHONE_NUMBER)
VALUES('100', 'TREASURY DEPT', 'TAKE CARE OF THE CHURCH FINANCES', 'A100', 'TDEPT@GMAIL.COM', '7037302222');

INSERT INTO DEPARTMENT(DEPARTMENT_ID, DEPARTMENT_NAME, DEPARTMENT_FUNCTION, OFFICE, DEPT_EMAIL_ADDRESS, DEPT_PHONE_NUMBER)
VALUES('200', 'SECRETARY DEPT', 'TAKE CARE OF CHURCH RECORDS', 'A200', 'SDEPT@GMAIL.COM', '7037302223');

INSERT INTO DEPARTMENT(DEPARTMENT_ID, DEPARTMENT_NAME, DEPARTMENT_FUNCTION, OFFICE, DEPT_EMAIL_ADDRESS, DEPT_PHONE_NUMBER)
VALUES('300', 'PERSONAL MIN DEPT', 'TAKE CARE OF CHURCH EVANGELISM', 'A300', 'PMINDEPT@GMAIL.COM', '7037302224');

INSERT INTO DEPARTMENT(DEPARTMENT_ID, DEPARTMENT_NAME, DEPARTMENT_FUNCTION, OFFICE, DEPT_EMAIL_ADDRESS, DEPT_PHONE_NUMBER)
VALUES('400', 'MUSIC DEPT', 'TAKE CARE OF EVERYTHING MUSIC RELATED', 'A400', 'MDEPT@GMAIL.COM', '7037302225');

INSERT INTO DEPARTMENT(DEPARTMENT_ID, DEPARTMENT_NAME, DEPARTMENT_FUNCTION, OFFICE, DEPT_EMAIL_ADDRESS, DEPT_PHONE_NUMBER)
VALUES('500', 'YOUTH DEPT', 'TAKE CARE OF THE CHURCH YOUTH', 'A500', 'YDEPT@GMAIL.COM', '7037302226');

COMMIT;

UPDATE DEPARTMENT SET ELDER_ID='1', MEMBER_ID='3' WHERE DEPARTMENT_ID='100';
UPDATE DEPARTMENT SET ELDER_ID='1', MEMBER_ID='6' WHERE DEPARTMENT_ID='200';
UPDATE DEPARTMENT SET ELDER_ID='2', MEMBER_ID='2' WHERE DEPARTMENT_ID='300';
UPDATE DEPARTMENT SET ELDER_ID='2', MEMBER_ID='1' WHERE DEPARTMENT_ID='400';
UPDATE DEPARTMENT SET ELDER_ID='3', MEMBER_ID='8' WHERE DEPARTMENT_ID='500';

--Inserting the church elders information into the database--

INSERT INTO ELDER(ELDER_ID, FIRST_NAME, LAST_NAME, OFFICE_PHONE_NUMBER, OFFICE_EMAIL_ADDRESS, OFFICE)
VALUES(01, 'JOHN', 'JOHNSON', '7037302227', 'ELDER1@GMAIL.COM', 'E101');

INSERT INTO ELDER(ELDER_ID, FIRST_NAME, LAST_NAME, OFFICE_PHONE_NUMBER, OFFICE_EMAIL_ADDRESS, OFFICE)
VALUES(02, 'PETER', 'SAMSON', '7037302228', 'ELDER2@GMAIL.COM', 'E102');

INSERT INTO ELDER(ELDER_ID, FIRST_NAME, LAST_NAME, OFFICE_PHONE_NUMBER, OFFICE_EMAIL_ADDRESS, OFFICE)
VALUES(03, 'JAMES', 'MILLER', '7037302228', 'ELDER3@GMAIL.COM', 'E103');

COMMIT;

UPDATE ELDER SET DEPARTMENT_ID='100' WHERE ELDER_ID='1';
UPDATE ELDER SET DEPARTMENT_ID='200' WHERE ELDER_ID='1';
UPDATE ELDER SET DEPARTMENT_ID='300' WHERE ELDER_ID='2';
UPDATE ELDER SET DEPARTMENT_ID='400' WHERE ELDER_ID='2';
UPDATE ELDER SET DEPARTMENT_ID='500' WHERE ELDER_ID='3';


--Inserting the church pastor’s information into the database--

INSERT INTO PASTOR(PASTOR_ID, FIRST_NAME, LAST_NAME, OFFICE_PHONE_NUMBER, OFFICE_EMAIL_ADDRESS, OFFICE)
VALUES('P100', 'PAUL', 'PETERS', '7037302230', 'CHPASTOR@GMAIL.COM', 'P101');
COMMIT;

--Inserting the different positions that can be held into the database--

INSERT INTO POSITION(POSITION_ID, DIRECTOR, ASSISTANT_DIRECTOR, SECRETARY, TREASURER)
VALUES('T01', 'CARLTON BANKS', 'PHILIP BANKS', 'VIVIAN BANKS', 'HILLARY BANKS');

INSERT INTO POSITION(POSITION_ID, DIRECTOR, ASSISTANT_DIRECTOR, SECRETARY, TREASURER)
VALUES('S01', 'ASHLEY BANKS', 'JEFFREY BUTLER', 'N/A', 'N/A');

INSERT INTO POSITION(POSITION_ID, DIRECTOR, ASSISTANT_DIRECTOR, SECRETARY, TREASURER)
VALUES('CPMO1', 'PHILIP BANKS', 'VY SMITH', 'HELEN SMITH', 'VIVIAN BANKS');

INSERT INTO POSITION(POSITION_ID, DIRECTOR, ASSISTANT_DIRECTOR, SECRETARY, TREASURER)
VALUES('M01', 'WILL SMITH', 'NICHOLAS BANKS', 'ASHLEY BANKS', 'CARLTON BANKS');

INSERT INTO POSITION(POSITION_ID, DIRECTOR, ASSISTANT_DIRECTOR, SECRETARY, TREASURER)
VALUES('Y01', 'JEFFREY BUTLER', 'NICHOLAS BANKS', 'WILL SMITH', 'VY SMITH');

COMMIT;




--Query 1--
SELECT * FROM CHURCH_MEMBER;

--Query 2--
SELECT FIRST_NAME, LAST_NAME, SEX, EMAIL_ADDRESS, PHONE_NUMBER FROM CHURCH_MEMBER;

--Query 3--
SELECT * FROM CONFERENCE_INFO;

--Query 4--
SELECT CHURCH_MEMBER.MEMBER_ID, CHURCH_MEMBER.FIRST_NAME, CHURCH_MEMBER.LAST_NAME, CHURCH_MEMBER.EMAIL_ADDRESS,
CHURCH_MEMBER.SEX, CHURCH_MEMBER.TERM, CHURCH_MEMBER.PHONE_NUMBER, POSITION.POSITION_ID, POSITION.DIRECTOR,
POSITION.ASSISTANT_DIRECTOR, POSITION.SECRETARY, POSITION.TREASURER FROM CHURCH_MEMBER
FULL JOIN POSITION ON CHURCH_MEMBER.POSITION_ID=POSITION.POSITION_ID;

--Query 5--
SELECT * FROM CHURCH_MEMBER ORDER BY LAST_NAME ASC;

--Query 6--
SELECT DEPARTMENT.DEPARTMENT_ID, DEPARTMENT.DEPARTMENT_NAME, ELDER.FIRST_NAME, ELDER.LAST_NAME, CONFERENCE_LEADER.CONFERENCE_LEADER_ID
FROM DEPARTMENT RIGHT JOIN ELDER ON DEPARTMENT.ELDER_ID=ELDER.ELDER_ID
LEFT JOIN CONFERENCE_LEADER ON DEPARTMENT.CONFERENCE_LEADER_ID=CONFERENCE.CONFERENCE_LEADER_ID
FETCH FIRST 10 ROWS ONLY;

--Query 7--
SELECT DISTINCT ELDER.ELDER_ID, ELDER.FIRST_NAME, ELDER.LAST_NAME, DEPARTMENT.DEPARTMENT_ID, DEPARTMENT.DEPARTMENT_NAME, CHURCH_MEMBER.MEMBER_ID FROM ELDER
RIGHT JOIN DEPARTMENT ON ELDER.DEPARTMENT_ID=DEPARTMENT.DEPARTMENT_ID
LEFT JOIN CHURCH_MEMBER ON DEPARTMENT.MEMBER_ID=CHURCH_MEMBER.MEMBER_ID;

--Query 8--
SELECT LAST_NAME, FIRST_NAME, SEX, COUNT(*) FROM CHURCH_MEMBER GROUP BY LAST_NAME, FIRST_NAME, SEX;

--Query 9--
SELECT * FROM ELDER WHERE ELDER_ID IN (SELECT DEPARTMENT.ELDER_ID FROM DEPARTMENT);

--Query 10--
SELECT OFFICE_EMAIL_ADDRESS, LENGTH(OFFICE_EMAIL_ADDRESS) FROM PASTOR;

--Query 11--
DELETE FROM POSITION WHERE DIRECTOR=’PHILIP’;
ROLLBACK;

--Query 12—
UPDATE ELDER SET ELDER.FIRST_NAME=’LUKE’ WHERE ELDER.FIRST_NAME=’JOHN’;
SELECT * FROM ELDER;
ROLLBACK;
SELECT * FROM ELDER;

--Query 13--
SELECT * FROM DEPARTMENT WHERE ELDER_ID=(SELECT ELDER_ID FROM ELDER WHERE ELDER_ID='1');

--Query 14--
SELECT * FROM CONFERENCE_LEADER WHERE PASTOR_ID=(SELECT PASTOR_ID FROM PASTOR);

--Query 15--
SELECT ELDER_ID, MEMBER_ID, DEPARTMENT_NAME, DEPARTMENT_FUNCTION FROM DEPARTMENT ORDER BY DEPARTMENT_NAME DESC;

--Query 16--
SELECT CHURCH_MEMBER.LAST_NAME, CHURCH_MEMBER.FIRST_NAME, (SELECT COUNT(*) FROM CHURCH_MEMBER WHERE LAST_NAME='BANKS') AS FAMILY 
FROM CHURCH_MEMBER WHERE LAST_NAME='BANKS' GROUP BY CHURCH_MEMBER.LAST_NAME, CHURCH_MEMBER.FIRST_NAME ORDER BY FIRST_NAME ASC;

--Query 17--
SELECT CHURCH_MEMBER.FIRST_NAME, CHURCH_MEMBER.LAST_NAME, POSITION.POSITION_ID FROM CHURCH_MEMBER 
INNER JOIN POSITION ON CHURCH_MEMBER.POSITION_ID=POSITION.POSITION_ID
WHERE POSITION.POSITION_ID='CPMO1' ORDER BY CHURCH_MEMBER.LAST_NAME;

--Query 18--
SELECT CHURCH_MEMBER.FIRST_NAME, CHURCH_MEMBER.LAST_NAME, POSITION.POSITION_ID, DEPARTMENT.DEPARTMENT_ID,
CONFERENCE_LEADER.CONFERENCE_LEADER_ID FROM CHURCH_MEMBER
INNER JOIN POSITION ON CHURCH_MEMBER.POSITION_ID=POSITION.POSITION_ID
INNER JOIN DEPARTMENT ON CHURCH_MEMBER.MEMBER_ID=DEPARTMENT.MEMBER_ID
INNER JOIN CONFERENCE_LEADER ON DEPARTMENT.CONFERENCE_LEADER_ID=CONFERENCE_LEADER.CONFERENCE_LEADER_ID
ORDER BY CHURCH_MEMBER.LAST_NAME ASC;

--Query 19--
SELECT SEX, COUNT(CASE WHEN SEX='M' THEN 1 END) AS MALE, COUNT(CASE WHEN SEX='F' THEN 1 END) AS FEMALE FROM CHURCH_MEMBER
GROUP BY SEX;

--Query 20--
SELECT ELDER.FIRST_NAME, ELDER.LAST_NAME, ELDER.OFFICE_PHONE_NUMBER, DEPARTMENT.DEPARTMENT_NAME, CONFERENCE_LEADER.FIRST_NAME,
CONFERENCE_LEADER.LAST_NAME, CONFERENCE_LEADER.OFFICE_EMAIL_ADDRESS FROM ELDER
INNER JOIN DEPARTMENT ON ELDER.DEPARTMENT_ID=DEPARTMENT.DEPARTMENT_ID
INNER JOIN CONFERENCE_LEADER ON DEPARTMENT.CONFERENCE_LEADER_ID=CONFERENCE_LEADER.CONFERENCE_LEADER_ID
ORDER BY ELDER.LAST_NAME ASC;

